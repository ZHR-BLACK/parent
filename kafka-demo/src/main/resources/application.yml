# 指定程序启动端口号
server:
  port: 8089
  tomcat:
    max-swallow-size: 100MB # 最重要的是这一行
# 指定使用哪个环境配置文件
spring:
  kafka:
    template:
      default-topic: default_topic
    # 消费者配置
    consumer:
      # 消费者客户端Id
#      client-id: self-study-consumer
      autoCommitInterval: 1000
      # 当偏移量不存在时， 自动重置到最近的偏移
      auto-offset-reset: latest
      # 是否自动提交偏移量
      enable-auto-commit: true
      # key 序列化器
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      # value 序列化器
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 默认消费组Id
      groupId: defaultConsumerGroup
      properties:
        # 消费请求超时时间
        request:
          timeout:
            ms: 40000
        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        session:
          timeout:
            ms: 40000
        # 反序列化时，类型转换受信任的包
        spring:
          json:
            trusted:
              packages: '*'
        isolation:
          level: read_committed

#          deserializer:
#            value:
#              delegate:
#                class: org.springframework.kafka.support.serializer.JsonDeserializer
    # 生产者配置
    producer:
      # 生产这的客户端Id
#      client-id: self-study-producer
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      batch-size: 16384
      # 生产端缓冲区大小
      buffer-memory: 33554432
      # Kafka提供的序列化和反序列化类
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # 提交延时
        linger:
          ms: 0
      # 重试次数
      retries: 2
      # 开启事务
#      transaction-id-prefix: tx.
    bootstrap-servers: localhost:9092


